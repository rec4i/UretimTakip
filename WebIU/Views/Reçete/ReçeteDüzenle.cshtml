@model WebIU.Models.ReçeteViewModels.ReçeteDüzenleViewModel

<div class="row">
    <div class="col">
        <div class=" card card-primary">
            <div class="card-header">
                <label>Reçete Bilgisi</label>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <label>Reçete Adı:</label>
                        <input type="text" id="ReçeteAdı" name="name" value="@Model.Reçete.ReçeteAdı" class="form-control" />
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label>Açıklama : </label>
                        <textarea rows="3" id="Açıklama" class="form-control">@Model.Reçete.Açıklama</textarea>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="d-flex flex-row-reverse">
                            <div class="p-2">
                                <button class="btn btn-warning" ReçeteId="@Model.Reçete.Id" id="ReçeteBilgielriKaydet"><i class="fa fa-save"></i> Kaydet</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <div class="d-flex flex-row-reverse">
                            <div class="p-2">
                                <button id="YeniİşEkleModalAçBtn" class="btn btn-primary"><i class="fa fa-plus"></i> Yeni İş Ekle</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <table id="YapılacakİşTablo"
                               data-toolbar="#YapılacakİşTabloToolBar"
                               data-pagination="true"
                               data-side-pagination="server"
                               data-id-field="id"
                               data-page-list="[10, 25, 50, 100, all]"
                               data-locale="Tr-tr"
                               data-search="true"
                               data-show-refresh="true"
                               data-show-export="true">
                            <thead>
                                <tr>
                                    <th data-field="id" data-title="id" hidden data-sortable="false"></th>
                                    <th data-field="sorumluKullanıcıGrup.grupAdı" data-title="Sorumlu Kullanıcı Grubu" data-sortable="false"></th>
                                    <th data-field="iş.işAdı" data-title="Yapılacak İş" data-sortable="false"></th>
                                    <th data-field="İşTamamlanmaSüresi" data-title="Tamamlanma Süresi (dk)" data-sortable="false"></th>
                                    <th data-field="iş.açıklama" data-title="Açıklama" data-sortable="false"></th>
                                    <th data-field="KullanılacakDepo" data-title="Tedarik Deposu" data-sortable="false"></th>
                                    <th data-field="KullanılacakStok" data-title="Kullanılacak Stok" data-sortable="false"></th>
                                    <th data-field="ÜretilecekDepo" data-title="Üretim Deposu" data-sortable="false"></th>
                                    <th data-field="ÜretilecekStok" data-title="Üretilecek Stok" data-sortable="false"></th>
                                    <th data-title="Actions" data-sortable="false"></th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" id="ReçteyeİşEKleModal" aria-labelledby="GenericModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="min-width:1500px">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="GenericModalTitle"> Reçeteye Yeni İş Ekle </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body" id="ReçteyeİşEKleModalBody">
                <div class="row">
                    <div class="col">
                        <label>Yapılacak İş :</label>
                        <select style="width:100%" id="YapılanIşlerSelect" class="form-control">
                        </select>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <label>Sorumlu Kullanıcı Grubu :</label>
                        <select style="width:100%" id="SorumluKullanıcıGrubuSelect" class="form-control">
                        </select>
                    </div>
                </div>


                <div class="row">
                    <div class="col">
                        <label>Açıklama :</label>
                        <textarea rows="3" class="form-control" id="İşAçıklama"></textarea>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label>Hedef İş Tamamlanma Süresi (dk):</label>
                        <input class="form-control" type="text" data-Mask="numeric" id="İşTamamlanmaSüresi" name="name" value="" />
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <div class="d-flex flex-row-reverse">
                            <div class="p-2">
                                <button class="btn btn-warning" id="ReçeteKaydetBtn" ReçeteId="@Model.Reçete.Id"><i class="fa fa-save"></i> Kaydet</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" id="İşKullanılacakStokDüzenleModal" aria-labelledby="GenericModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="min-width:1500px">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="GenericModalTitle"> Kullanılacak Stokğu Düzenle </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body" id="İşKullanılacakStokDüzenleBody">
                <div class="row">
                    <div class="col-3">
                        <label>Hedef Depo:</label>
                    </div>
                    <div class="col-3">
                        <label>Kullanılacak  Stok:</label>
                    </div>
                    <div class="col-3">
                        <label>Kullanılacak  Stok Miktarı:</label>
                    </div>
                    <div class="col-3"></div>
                </div>
                <div class="row">
                    <div class="col-3">
                        <select style="width:100%" class="form-control" id="KullanılacakDepo">
                        </select>
                    </div>
                    <div class="col-3">
                        <select style="width:100%" class="form-control" id="KullanılacakStok">
                        </select>
                    </div>
                    <div class="col-3">
                        <input type="text" data-Mask="bigDecimal" id="KullanılacakStokMiktarı" class="form-control" s value="" />
                    </div>
                    <div class="col-3">
                        <button class="btn btn-primary btn-block" id="KullanılacakStokEkleBtn"><i class="fa fa-plus"></i> Ekle</button>
                    </div>
                </div>


                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-header">
                                <label>Kullanılacak Stoklar </label>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col">
                                        <table id="KullanılacakStoklarTablo"
                                               data-toolbar="#KullanılacakStoklarTabloToolBar"
                                               data-pagination="true"
                                               data-side-pagination="server"
                                               data-id-field="id"
                                               data-page-list="[10, 25, 50, 100, all]"
                                               data-locale="Tr-tr"
                                               data-search="true"
                                               data-show-refresh="true"
                                               data-show-export="true">
                                            <thead>
                                                <tr>
                                                    <th data-field="id" data-title="id" hidden data-sortable="false"></th>
                                                    <th data-field="depo.depoAdı" data-title="Kullanılacak Depo" data-sortable="false"></th>
                                                    <th data-field="stok.stokAdı" data-title="Kullanılacak Stok" data-sortable="false"></th>
                                                    <th data-field="kullanılacakStokMiktarı" data-title="Kullanılacak Miktar" data-sortable="false"></th>
                                                    <th data-title="Actions" data-sortable="false"></th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>





            </div>
        </div>
    </div>
</div>




<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" id="İşÜretilecekStokDüzenleModal" aria-labelledby="GenericModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="min-width:1500px">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="GenericModalTitle"> Üretilecek Stokğu Düzenle </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body" id="İşÜretilecekStokDüzenleModalBody">
                <div class="row">
                    <div class="col-3">
                        <label>Hedef Depo:</label>
                    </div>
                    <div class="col-3">
                        <label>Üretilecek  Stok:</label>
                    </div>
                    <div class="col-3">
                        <label>Üretilecek  Stok Miktarı:</label>
                    </div>
                    <div class="col-3"></div>
                </div>
                <div class="row">
                    <div class="col-3">
                        <select style="width:100%" class="form-control" id="ÜretilecekDepo">
                        </select>
                    </div>
                    <div class="col-3">
                        <select style="width:100%" class="form-control" id="ÜretilecekStok">
                        </select>
                    </div>
                    <div class="col-3">
                        <input type="text" data-Mask="bigDecimal" id="ÜretilecekStokMiktarı" class="form-control" s value="" />
                    </div>
                    <div class="col-3">
                        <button class="btn btn-primary btn-block" id="ÜretilecekStokEkleBtn"><i class="fa fa-plus"></i> Ekle</button>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-header">
                                <label>Üretilecek Stoklar </label>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col">
                                        <table id="ÜretilecekStoklarTablo"
                                               data-toolbar="#ÜretilecekStoklarTabloToolBar"
                                               data-pagination="true"
                                               data-side-pagination="server"
                                               data-id-field="id"
                                               data-page-list="[10, 25, 50, 100, all]"
                                               data-locale="Tr-tr"
                                               data-search="true"
                                               data-show-refresh="true"
                                               data-show-export="true">
                                            <thead>
                                                <tr>
                                                    <th data-field="id" data-title="id" hidden data-sortable="false"></th>
                                                    <th data-field="depo.depoAdı" data-title="Kullanılacak Depo" data-sortable="false"></th>
                                                    <th data-field="stok.stokAdı" data-title="Kullanılacak Stok" data-sortable="false"></th>
                                                    <th data-field="üretilecekStokMiktarı" data-title="Üretilecek Miktar" data-sortable="false"></th>
                                                    <th data-title="Actions" data-sortable="false"></th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>





            </div>
        </div>
    </div>
</div>






<script type="text/javascript">
    $(document).ready(function () {

        $('#ÜretilecekStokEkleBtn').click(function () {
            var KullanılacakDepo = $('#ÜretilecekDepo').select2('data');
            var KullanılacakStok = $('#ÜretilecekStok').select2('data');
            var MtmId = $(this).attr('mtmid');

            var data = new FormData();
            data.append('MtmId', MtmId)

            data.append('DepoId', KullanılacakDepo[0].id)
            data.append('StokId', KullanılacakStok[0].id)
            data.append('KullanılacakMiktar', $('#ÜretilecekStokMiktarı').val())

            $.ajax({
                url: "/Reçete/ÜretilecekStokEkle",
                type: "POST",
                processData: false,
                contentType: false,
                async: false,
                data: data,
                success: function (data) {
                    if (data.status == 1) {
                        successAlert(data.message)
                    }
                    else {
                        errorAlert(data.message)
                    }
                    ÜretilecekStoklarDoldur(MtmId)
                    ReçeteYapılacakİşTabloDoldur()

                },
            });


        })

        $('#KullanılacakStokEkleBtn').click(function () {
            console.log("asdasd");
            var KullanılacakDepo = $('#KullanılacakDepo').select2('data');
            var KullanılacakStok = $('#KullanılacakStok').select2('data');
            var MtmId = $(this).attr('mtmid');

            var data = new FormData();
            data.append('MtmId', MtmId)

            data.append('DepoId', KullanılacakDepo[0].id)
            data.append('StokId', KullanılacakStok[0].id)
            data.append('KullanılacakMiktar', $('#KullanılacakStokMiktarı').val())

            $.ajax({
                url: "/Reçete/KullanılacakStokEkle",
                type: "POST",
                processData: false,
                contentType: false,
                async: false,
                data: data,
                success: function (data) {
                    if (data.status == 1) {
                        successAlert(data.message)
                    }
                    else {
                        errorAlert(data.message)
                    }
                    KullanılacakStoklarDoldur(MtmId)
                    ReçeteYapılacakİşTabloDoldur()

                },
            });


        })
        //SorumluKullanıcıGrubuSelect



        $('#ÜretilecekStok').select2({
            dropdownParent: $('#İşÜretilecekStokDüzenleModal'),

            ajax: {
                url: '/Stok/GetStokWithName', // AJAX isteği yapılacak URL
                dataType: 'json',
                delay: 250, // AJAX isteği arasındaki gecikme
                data: function (params) {
                    return {
                        StokName: params.term // Arama parametresi
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.map(function (item) {
                            return {
                                id: item.id, // Her öğenin benzersiz kimliği
                                text: item.stokAdı // Select2'de görüntülenecek metin
                            };
                        })
                    };
                },
                cache: true
            },
            minimumInputLength: 1, // Minimum karakter sayısı
            placeholder: 'Bir seçenek arayın', // Placeholder metni
            allowClear: true // Temizleme butonunu etkinleştir
        });
        $('#ÜretilecekDepo').select2({
            dropdownParent: $('#İşÜretilecekStokDüzenleModal'),
            ajax: {
                url: '/Depo/DepoSearchWithName', // AJAX isteği yapılacak URL
                dataType: 'json',
                delay: 250, // AJAX isteği arasındaki gecikme
                data: function (params) {
                    return {
                        DepoName: params.term // Arama parametresi
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.map(function (item) {
                            return {
                                id: item.id, // Her öğenin benzersiz kimliği
                                text: item.depoAdı, // Select2'de görüntülenecek metin
                            };
                        })
                    };
                },
                cache: true
            },
            minimumInputLength: 1, // Minimum karakter sayısı
            placeholder: 'Bir seçenek arayın', // Placeholder metni
            allowClear: true // Temizleme butonunu etkinleştir
        });

        $('#KullanılacakStok').select2({
            dropdownParent: $('#İşKullanılacakStokDüzenleModal'),

            ajax: {
                url: '/Stok/GetStokWithName', // AJAX isteği yapılacak URL
                dataType: 'json',
                delay: 250, // AJAX isteği arasındaki gecikme
                data: function (params) {
                    return {
                        StokName: params.term // Arama parametresi
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.map(function (item) {
                            return {
                                id: item.id, // Her öğenin benzersiz kimliği
                                text: item.stokAdı // Select2'de görüntülenecek metin
                            };
                        })
                    };
                },
                cache: true
            },
            minimumInputLength: 1, // Minimum karakter sayısı
            placeholder: 'Bir seçenek arayın', // Placeholder metni
            allowClear: true // Temizleme butonunu etkinleştir
        });
        $('#KullanılacakDepo').select2({
            dropdownParent: $('#İşKullanılacakStokDüzenleModal'),
            ajax: {
                url: '/Depo/DepoSearchWithName', // AJAX isteği yapılacak URL
                dataType: 'json',
                delay: 250, // AJAX isteği arasındaki gecikme
                data: function (params) {
                    return {
                        DepoName: params.term // Arama parametresi
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.map(function (item) {
                            return {
                                id: item.id, // Her öğenin benzersiz kimliği
                                text: item.depoAdı, // Select2'de görüntülenecek metin
                            };
                        })
                    };
                },
                cache: true
            },
            minimumInputLength: 1, // Minimum karakter sayısı
            placeholder: 'Bir seçenek arayın', // Placeholder metni
            allowClear: true // Temizleme butonunu etkinleştir
        });



        $('#SorumluKullanıcıGrubuSelect').select2({
            dropdownParent: $('#ReçteyeİşEKleModal'),
            ajax: {
                url: '/Reçete/SorumluKullanıcıGrubuAra', // AJAX isteği yapılacak URL
                dataType: 'json',
                delay: 250, // AJAX isteği arasındaki gecikme
                data: function (params) {
                    return {
                        GrupAdı: params.term // Arama parametresi
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.map(function (item) {
                            console.log(item);
                            return {
                                id: item.id, // Her öğenin benzersiz kimliği
                                text: item.grupAdı, // Select2'de görüntülenecek metin
                            };
                        })
                    };
                },
                cache: true
            },
            minimumInputLength: 1, // Minimum karakter sayısı
            placeholder: 'Bir seçenek arayın', // Placeholder metni
            allowClear: true // Temizleme butonunu etkinleştir
        });

        $('#YapılanIşlerSelect').select2({
            dropdownParent: $('#ReçteyeİşEKleModal'),
            ajax: {
                url: '/Iş/IşSearchWithName', // AJAX isteği yapılacak URL
                dataType: 'json',
                delay: 250, // AJAX isteği arasındaki gecikme
                data: function (params) {
                    return {
                        işName: params.term // Arama parametresi
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.map(function (item) {
                            console.log(item);
                            return {
                                id: item.id, // Her öğenin benzersiz kimliği
                                text: item.işAdı, // Select2'de görüntülenecek metin
                                açıklama: item.açıklama,
                                tamamlanmaSüresi: item.İşTamamlanmaSüresi
                            };
                        })
                    };
                },
                cache: true
            },
            minimumInputLength: 1, // Minimum karakter sayısı
            placeholder: 'Bir seçenek arayın', // Placeholder metni
            allowClear: true // Temizleme butonunu etkinleştir
        });
        $('#YapılanIşlerSelect').change(function () {
            var data = $(this).select2('data')
            $('#İşAçıklama').val(data[0].açıklama)
        })


        $('#ReçeteKaydetBtn').click(function () {
            var selectData = $('#YapılanIşlerSelect').select2('data');
            var sorumluKullanıcıSelect = $('#SorumluKullanıcıGrubuSelect').select2('data');

            var data = new FormData();
            data.append('ReçeteId', $(this).attr('ReçeteId'))
            data.append('İşId', selectData[0].id)
            data.append('Açıklama', $('#Açıklama').val())
            data.append('İşTamamlanmaSüresi', $('#İşTamamlanmaSüresi').val())
            data.append('SorumluGurpId', sorumluKullanıcıSelect[0].id)

            //SorumluGurpId

            $.ajax({
                url: "/Reçete/ReçeteİşEkle",
                type: "POST",
                processData: false,
                contentType: false,
                async: false,
                data: data,
                success: function (data) {
                    if (data.status == 1) {
                        successAlert(data.message)
                    }
                    else {
                        errorAlert(data.message)
                    }
                    ReçeteYapılacakİşTabloDoldur()
                },
            });



        })











        $('#YeniİşEkleModalAçBtn').click(function () {
            $('#ReçteyeİşEKleModal').modal('show')
        })


        $('#ReçeteBilgielriKaydet').click(function () {

            var data = new FormData();
            data.append('Id', $(this).attr('ReçeteId'))
            data.append('ReçeteAdı', $('#ReçeteAdı').val())
            data.append('Açıklama', $('#Açıklama').val())

            $.ajax({
                url: "/Reçete/ReçeteDüzenle",
                type: "POST",
                processData: false,
                contentType: false,
                async: false,
                data: data,
                success: function (data) {
                    if (data.status == 1) {
                        successAlert(data.message)
                    }
                    else {
                        errorAlert(data.message)
                    }
                },
            });

        })


        ReçeteYapılacakİşTabloDoldur()
    })
    function ÜretilecekStoklarDoldur(İşMtmId) {
        $('#ÜretilecekStoklarTablo').bootstrapTable("destroy")
        $('#ÜretilecekStoklarTablo').bootstrapTable({
            url: "/Reçete/Reçete_İş_Mtm_ÜretilecekStokPaginaiton?Id=" + İşMtmId,
            columns: [
                [
                    {},
                    {},
                    {},
                    {},
                    {
                        formatter: ActionFormatter
                    },
                ]
            ],
            onLoadSuccess: afterLoad,
        })
        function ActionFormatter(value, row) {
            var value = "";
            //value += "<button id='OrderConfrimationEditBtn' odrderId='" + row["id"] + "' class='btn btn-warning'><i class='fa fa-edit'></i> Düzenle</button>";
            value += "<button id='ReçeteÜretilecekStokSil' IşId='" + row["id"] + "' class='btn btn-danger'><i class='fa fa-trash'></i></button>";

            return value
        }
        function afterLoad() {
            $('#ReçeteÜretilecekStokSil').click(function () {
                var data = new FormData();
                data.append('Id', $(this).attr('IşId'))

                Swal.fire({
                    title: ' silinecektir!',
                    text: 'Silmek istediğinizden emin misiniz?',
                    icon: 'warning',
                    showCancelButton: true,
                    cancelButtonText: "Geri dön",
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sil'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "/Reçete/ReçeteÜretilecekStokSil",
                            type: "POST",
                            processData: false,
                            contentType: false,
                            async: false,
                            data: data,
                            success: function (data) {
                                if (data.status == 1) {
                                    successAlert(data.message)
                                }
                                else {
                                    errorAlert(data.message)
                                }
                                ÜretilecekStoklarDoldur(İşMtmId)
                                ReçeteYapılacakİşTabloDoldur()
                            },
                        });
                    }
                })

            })

        }

    }
    function KullanılacakStoklarDoldur(İşMtmId) {
        $('#KullanılacakStoklarTablo').bootstrapTable("destroy")
        $('#KullanılacakStoklarTablo').bootstrapTable({
            url: "/Reçete/Reçete_İş_Mtm_KullanıclacakStokPaginaiton?Id=" + İşMtmId,
        columns: [
            [
                {},
                {},
                {},
                {},
                {
                    formatter: ActionFormatter
                },
            ]
        ],
        onLoadSuccess: afterLoad,
    })
    function ActionFormatter(value, row) {
        var value = "";
        //value += "<button id='OrderConfrimationEditBtn' odrderId='" + row["id"] + "' class='btn btn-warning'><i class='fa fa-edit'></i> Düzenle</button>";
        value += "<button id='ReçeteKullanılacakStokSil' IşId='" + row["id"] + "' class='btn btn-danger'><i class='fa fa-trash'></i></button>";

        return value
    }
    function afterLoad() {
        $('#ReçeteKullanılacakStokSil').click(function () {
            var data = new FormData();
            data.append('Id', $(this).attr('IşId'))

            Swal.fire({
                title: ' silinecektir!',
                text: 'Silmek istediğinizden emin misiniz?',
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: "Geri dön",
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sil'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/Reçete/ReçeteKullanılacakStokSil",
                        type: "POST",
                        processData: false,
                        contentType: false,
                        async: false,
                        data: data,
                        success: function (data) {
                            if (data.status == 1) {
                                successAlert(data.message)
                            }
                            else {
                                errorAlert(data.message)
                            }
                            KullanılacakStoklarDoldur(İşMtmId)
                            ReçeteYapılacakİşTabloDoldur()
                        },
                    });
                }
            })

        })

    }

}
    function ReçeteYapılacakİşTabloDoldur() {
        $('#YapılacakİşTablo').bootstrapTable("destroy")
        $('#YapılacakİşTablo').bootstrapTable({
            url: "/Reçete/Reçete_İş_Mtm_Paginaiton?ReçeteId="+@Model.Reçete.Id,
            columns: [
                [
                    {},
                    {},
                    {},
                    {},
                    {},
                    {
                        formatter:TedariDepolarıFormatter
                    },
                    {
                        formatter: KullanılacakStokFormatter

                    },
                    {
                        formatter: ÜretimDeposuFormatter
                    },
                    {
                        formatter: ÜretilecekStokFormatter
                    },
                    {
                        formatter: ActionFormatter
                    },
                ]
            ],
            onLoadSuccess: afterLoad,
        })
        function TedariDepolarıFormatter(value, row) {
            var data = new FormData();
            data.append('MtmId', row["id"])

            var eklenecekData = "";

            $.ajax({
                url: "/Reçete/KullanılacakStokGetir",
                type: "POST",
                processData: false,
                contentType: false,
                async: false,
                data: data,
                success: function (data) {
                    if (data.status == 1) {
                        for (var i = 0; i < data.data.length; i++) {
                            eklenecekData += "- " + data.data[i].depo.depoAdı + "</br>";
                        }
                    }
                    else {
                        errorAlert(data.message)
                    }
                },
            });
            return eklenecekData;

        }
        function KullanılacakStokFormatter(value, row) {
            var data = new FormData();
            data.append('MtmId', row["id"])

            var eklenecekData = "";

            $.ajax({
                url: "/Reçete/KullanılacakStokGetir",
                type: "POST",
                processData: false,
                contentType: false,
                async: false,
                data: data,
                success: function (data) {
                    if (data.status == 1) {
                        for (var i = 0; i < data.data.length; i++) {
                            eklenecekData += "- " + data.data[i].stok.stokAdı + "</br>";
                        }
                    }
                    else {
                        errorAlert(data.message)
                    }
                },
            });
            return eklenecekData;

        }
        function ÜretimDeposuFormatter(value, row) {
            var data = new FormData();
            data.append('MtmId', row["id"])

            var eklenecekData = "";

            $.ajax({
                url: "/Reçete/ÜretilecekStokGetir",
                type: "POST",
                processData: false,
                contentType: false,
                async: false,
                data: data,
                success: function (data) {
                    if (data.status == 1) {
                        for (var i = 0; i < data.data.length; i++) {
                            eklenecekData += "- " + data.data[i].depo.depoAdı + "</br>";
                        }
                    }
                    else {
                        errorAlert(data.message)
                    }
                },
            });
            return eklenecekData;

        }
        function ÜretilecekStokFormatter(value, row) {
            var data = new FormData();
            data.append('MtmId', row["id"])

            var eklenecekData = "";

            $.ajax({
                url: "/Reçete/ÜretilecekStokGetir",
                type: "POST",
                processData: false,
                contentType: false,
                async: false,
                data: data,
                success: function (data) {
                    if (data.status == 1) {
                        for (var i = 0; i < data.data.length; i++) {
                            eklenecekData +="- "+ data.data[i].stok.stokAdı + "</br>";
                        }
                    }
                    else {
                        errorAlert(data.message)
                    }
                },
            });
            return eklenecekData;

        }
        function ActionFormatter(value, row) {
            var value = "";
            //value += "<button id='OrderConfrimationEditBtn' odrderId='" + row["id"] + "' class='btn btn-warning'><i class='fa fa-edit'></i> Düzenle</button>";
            value += "<a href='/Reçete/ReçeteDüzenle?Id=" + row["id"] + "' odrderId='" + row["id"] + "' class='btn btn-warning'><i class='fa fa-edit'></i> Düzenle</a> ";
            value += "<button id='KullanılacakStokDüzenle' İşId='" + row["id"] + "' class='btn btn-primary'><i class='fa fa-edit'></i> Kullanılacak Stoğu Düzenle</button> ";
            value += "<button id='ÜretilecekStokDüzenle' İşId='" + row["id"] + "' class='btn btn-secondary'><i class='fa fa-edit'></i> Üretilecek Stoğu Düzenle</button> ";
            value += "<button id='ReçeteİşSil' IşId='" + row["id"] + "' class='btn btn-danger'><i class='fa fa-trash'></i></button>";

            return value
        }
        function afterLoad() {
            $('#KullanılacakStokDüzenle').click(function () {
                var MtmId = $(this).attr('İşId')
                $('#İşKullanılacakStokDüzenleModal').modal('show')
                $('#KullanılacakStokEkleBtn').attr('MtmId', MtmId)
                KullanılacakStoklarDoldur(MtmId)
            })
            $('#ÜretilecekStokDüzenle').click(function () {
                var MtmId = $(this).attr('İşId')
                $('#İşÜretilecekStokDüzenleModal').modal('show')
                $('#ÜretilecekStokEkleBtn').attr('MtmId', MtmId)
                ÜretilecekStoklarDoldur(MtmId)
            })
            //
            $('#ReçeteİşSil').click(function () {
                var data = new FormData();
                data.append('Id', $(this).attr('IşId'))

                Swal.fire({
                    title: ' silinecektir!',
                    text: 'Silmek istediğinizden emin misiniz?',
                    icon: 'warning',
                    showCancelButton: true,
                    cancelButtonText: "Geri dön",
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sil'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "/Reçete/ReçeteİşSil",
                            type: "POST",
                            processData: false,
                            contentType: false,
                            async: false,
                            data: data,
                            success: function (data) {
                                if (data.status == 1) {
                                    successAlert(data.message)
                                }
                                else {
                                    errorAlert(data.message)
                                }
                                OrderTablosuDoldur()
                            },
                        });
                    }
                })

            })

        }

    }
</script>