// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppIdentityDbContext))]
    [Migration("20241209122433_foo45")]
    partial class foo45
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Concrete.Identity.AppIdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BanComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BanEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BanStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("BanStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.AnnouncementRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnnouncementId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.ToTable("AnnouncementRoles");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.AnnouncementUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnnouncementId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.ToTable("AnnouncementUsers");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Barkod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StokId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İçerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.HasIndex("StokId");

                    b.ToTable("Barkods");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirimKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DönüşümAçıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DönüşümKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Birims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "ADET",
                            DönüşümAçıklama = "ADET",
                            DönüşümKodu = "NIU",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "KG",
                            DönüşümAçıklama = "KİLOGRAM",
                            DönüşümKodu = "KGM",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "GR",
                            DönüşümAçıklama = "GRAM",
                            DönüşümKodu = "GRM",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "M",
                            DönüşümAçıklama = "METRE",
                            DönüşümKodu = "MTR",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "LİTRE",
                            DönüşümAçıklama = "LİTRE",
                            DönüşümKodu = "LTR",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "PA",
                            DönüşümAçıklama = "PAKET (Packet)",
                            DönüşümKodu = "PA",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "PK",
                            DönüşümAçıklama = "PAKET (Pack)",
                            DönüşümKodu = "PK",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "KUTU",
                            DönüşümAçıklama = "KUTU",
                            DönüşümKodu = "BX",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "METRE",
                            DönüşümAçıklama = "METRE",
                            DönüşümKodu = "MTR",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "CM",
                            DönüşümAçıklama = "SANTİMETRE",
                            DönüşümKodu = "CMT",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 11,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "M3",
                            DönüşümAçıklama = "METREKÜB",
                            DönüşümKodu = "MTQ",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 12,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "M2",
                            DönüşümAçıklama = "METREKARE",
                            DönüşümKodu = "MTK",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 13,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "RULO",
                            DönüşümAçıklama = "RULO",
                            DönüşümKodu = "ROLL",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 14,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "SET",
                            DönüşümAçıklama = "SET",
                            DönüşümKodu = "SET",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 15,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirimKodu = "CM3",
                            DönüşümAçıklama = "SANTİMETREKÜB",
                            DönüşümKodu = "CMQ",
                            IsDeleted = false,
                            Status = true
                        });
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.BlokBilgi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Derinlik")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Kalite")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Kat")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StokId")
                        .HasColumnType("int");

                    b.Property<int>("Stun")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ŞantiyeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StokId");

                    b.HasIndex("ŞantiyeId");

                    b.ToTable("BlokBilgis");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.BlokGörüntü", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlokBilgiId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlokBilgiId");

                    b.ToTable("BlokGörüntüs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Cari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CariKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Tür")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.ToTable("Caris");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.CariHareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CariId")
                        .HasColumnType("int");

                    b.Property<int>("HareketTürü")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ÇekGörselUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ÇekNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ÖdemeTürü")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CariId");

                    b.ToTable("CariHarekets");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.CariKoduTanım", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tanım")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.ToTable("CariKoduTanıms");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SubjecTtype")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Afghanistan",
                            Row = 1,
                            ShortName = "AF",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Albania",
                            Row = 2,
                            ShortName = "AL",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Algeria",
                            Row = 3,
                            ShortName = "DZ",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "American Samoa",
                            Row = 4,
                            ShortName = "AS",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Andorra",
                            Row = 5,
                            ShortName = "AD",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Angola",
                            Row = 6,
                            ShortName = "AO",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Anguilla",
                            Row = 7,
                            ShortName = "AI",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Antarctica",
                            Row = 8,
                            ShortName = "AQ",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Antigua and Barbuda",
                            Row = 9,
                            ShortName = "AG",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Argentina",
                            Row = 10,
                            ShortName = "AR",
                            Status = true
                        },
                        new
                        {
                            Id = 11,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Armenia",
                            Row = 11,
                            ShortName = "AM",
                            Status = true
                        },
                        new
                        {
                            Id = 12,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Aruba",
                            Row = 12,
                            ShortName = "AW",
                            Status = true
                        },
                        new
                        {
                            Id = 13,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Australia",
                            Row = 13,
                            ShortName = "AU",
                            Status = true
                        },
                        new
                        {
                            Id = 14,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Austria",
                            Row = 14,
                            ShortName = "AT",
                            Status = true
                        },
                        new
                        {
                            Id = 15,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Azerbaijan",
                            Row = 15,
                            ShortName = "AZ",
                            Status = true
                        },
                        new
                        {
                            Id = 16,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bahamas (the)",
                            Row = 16,
                            ShortName = "BS",
                            Status = true
                        },
                        new
                        {
                            Id = 17,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bahrain",
                            Row = 17,
                            ShortName = "BH",
                            Status = true
                        },
                        new
                        {
                            Id = 18,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bangladesh",
                            Row = 18,
                            ShortName = "BD",
                            Status = true
                        },
                        new
                        {
                            Id = 19,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Barbados",
                            Row = 19,
                            ShortName = "BB",
                            Status = true
                        },
                        new
                        {
                            Id = 20,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Belarus",
                            Row = 20,
                            ShortName = "BY",
                            Status = true
                        },
                        new
                        {
                            Id = 21,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Belgium",
                            Row = 21,
                            ShortName = "BE",
                            Status = true
                        },
                        new
                        {
                            Id = 22,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Belize",
                            Row = 22,
                            ShortName = "BZ",
                            Status = true
                        },
                        new
                        {
                            Id = 23,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Benin",
                            Row = 23,
                            ShortName = "BJ",
                            Status = true
                        },
                        new
                        {
                            Id = 24,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bermuda",
                            Row = 24,
                            ShortName = "BM",
                            Status = true
                        },
                        new
                        {
                            Id = 25,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bhutan",
                            Row = 25,
                            ShortName = "BT",
                            Status = true
                        },
                        new
                        {
                            Id = 26,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bolivia (Plurinational State of)",
                            Row = 26,
                            ShortName = "BO",
                            Status = true
                        },
                        new
                        {
                            Id = 27,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bonaire, Sint Eustatius and Saba",
                            Row = 27,
                            ShortName = "BQ",
                            Status = true
                        },
                        new
                        {
                            Id = 28,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bosnia and Herzegovina",
                            Row = 28,
                            ShortName = "BA",
                            Status = true
                        },
                        new
                        {
                            Id = 29,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Botswana",
                            Row = 29,
                            ShortName = "BW",
                            Status = true
                        },
                        new
                        {
                            Id = 30,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bouvet Island",
                            Row = 30,
                            ShortName = "BV",
                            Status = true
                        },
                        new
                        {
                            Id = 31,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Brazil",
                            Row = 31,
                            ShortName = "BR",
                            Status = true
                        },
                        new
                        {
                            Id = 32,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "British Indian Ocean Territory (the)",
                            Row = 32,
                            ShortName = "IO",
                            Status = true
                        },
                        new
                        {
                            Id = 33,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Brunei Darussalam",
                            Row = 33,
                            ShortName = "BN",
                            Status = true
                        },
                        new
                        {
                            Id = 34,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bulgaria",
                            Row = 34,
                            ShortName = "BG",
                            Status = true
                        },
                        new
                        {
                            Id = 35,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Burkina Faso",
                            Row = 35,
                            ShortName = "BF",
                            Status = true
                        },
                        new
                        {
                            Id = 36,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Burundi",
                            Row = 36,
                            ShortName = "BI",
                            Status = true
                        },
                        new
                        {
                            Id = 37,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cabo Verde",
                            Row = 37,
                            ShortName = "CV",
                            Status = true
                        },
                        new
                        {
                            Id = 38,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cambodia",
                            Row = 38,
                            ShortName = "KH",
                            Status = true
                        },
                        new
                        {
                            Id = 39,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cameroon",
                            Row = 39,
                            ShortName = "CM",
                            Status = true
                        },
                        new
                        {
                            Id = 40,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Canada",
                            Row = 40,
                            ShortName = "CA",
                            Status = true
                        },
                        new
                        {
                            Id = 41,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cayman Islands (the)",
                            Row = 41,
                            ShortName = "KY",
                            Status = true
                        },
                        new
                        {
                            Id = 42,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Central African Republic (the)",
                            Row = 42,
                            ShortName = "CF",
                            Status = true
                        },
                        new
                        {
                            Id = 43,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Chad",
                            Row = 43,
                            ShortName = "TD",
                            Status = true
                        },
                        new
                        {
                            Id = 44,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Chile",
                            Row = 44,
                            ShortName = "CL",
                            Status = true
                        },
                        new
                        {
                            Id = 45,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "China",
                            Row = 45,
                            ShortName = "CN",
                            Status = true
                        },
                        new
                        {
                            Id = 46,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Christmas Island",
                            Row = 46,
                            ShortName = "CX",
                            Status = true
                        },
                        new
                        {
                            Id = 47,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cocos (Keeling) Islands (the)",
                            Row = 47,
                            ShortName = "CC",
                            Status = true
                        },
                        new
                        {
                            Id = 48,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Colombia",
                            Row = 48,
                            ShortName = "CO",
                            Status = true
                        },
                        new
                        {
                            Id = 49,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Comoros (the)",
                            Row = 49,
                            ShortName = "KM",
                            Status = true
                        },
                        new
                        {
                            Id = 50,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Congo (the Democratic Republic of the)",
                            Row = 50,
                            ShortName = "CD",
                            Status = true
                        },
                        new
                        {
                            Id = 51,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Congo (the)",
                            Row = 51,
                            ShortName = "CG",
                            Status = true
                        },
                        new
                        {
                            Id = 52,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cook Islands (the)",
                            Row = 52,
                            ShortName = "CK",
                            Status = true
                        },
                        new
                        {
                            Id = 53,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Costa Rica",
                            Row = 53,
                            ShortName = "CR",
                            Status = true
                        },
                        new
                        {
                            Id = 54,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Croatia",
                            Row = 54,
                            ShortName = "HR",
                            Status = true
                        },
                        new
                        {
                            Id = 55,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cuba",
                            Row = 55,
                            ShortName = "CU",
                            Status = true
                        },
                        new
                        {
                            Id = 56,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Curaçao",
                            Row = 56,
                            ShortName = "CW",
                            Status = true
                        },
                        new
                        {
                            Id = 57,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cyprus",
                            Row = 57,
                            ShortName = "CY",
                            Status = true
                        },
                        new
                        {
                            Id = 58,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Czechia",
                            Row = 58,
                            ShortName = "CZ",
                            Status = true
                        },
                        new
                        {
                            Id = 59,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Côte dIvoire",
                            Row = 59,
                            ShortName = "CI",
                            Status = true
                        },
                        new
                        {
                            Id = 60,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Denmark",
                            Row = 60,
                            ShortName = "DK",
                            Status = true
                        },
                        new
                        {
                            Id = 61,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Djibouti",
                            Row = 61,
                            ShortName = "DJ",
                            Status = true
                        },
                        new
                        {
                            Id = 62,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Dominica",
                            Row = 62,
                            ShortName = "DM",
                            Status = true
                        },
                        new
                        {
                            Id = 63,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Dominican Republic (the)",
                            Row = 63,
                            ShortName = "DO",
                            Status = true
                        },
                        new
                        {
                            Id = 64,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Ecuador",
                            Row = 64,
                            ShortName = "EC",
                            Status = true
                        },
                        new
                        {
                            Id = 65,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Egypt",
                            Row = 65,
                            ShortName = "EG",
                            Status = true
                        },
                        new
                        {
                            Id = 66,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "El Salvador",
                            Row = 66,
                            ShortName = "SV",
                            Status = true
                        },
                        new
                        {
                            Id = 67,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Equatorial Guinea",
                            Row = 67,
                            ShortName = "GQ",
                            Status = true
                        },
                        new
                        {
                            Id = 68,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Eritrea",
                            Row = 68,
                            ShortName = "ER",
                            Status = true
                        },
                        new
                        {
                            Id = 69,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Estonia",
                            Row = 69,
                            ShortName = "EE",
                            Status = true
                        },
                        new
                        {
                            Id = 70,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Eswatini",
                            Row = 70,
                            ShortName = "SZ",
                            Status = true
                        },
                        new
                        {
                            Id = 71,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Ethiopia",
                            Row = 71,
                            ShortName = "ET",
                            Status = true
                        },
                        new
                        {
                            Id = 72,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Falkland Islands (the) [Malvinas]",
                            Row = 72,
                            ShortName = "FK",
                            Status = true
                        },
                        new
                        {
                            Id = 73,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Faroe Islands (the)",
                            Row = 73,
                            ShortName = "FO",
                            Status = true
                        },
                        new
                        {
                            Id = 74,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Fiji",
                            Row = 74,
                            ShortName = "FJ",
                            Status = true
                        },
                        new
                        {
                            Id = 75,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Finland",
                            Row = 75,
                            ShortName = "FI",
                            Status = true
                        },
                        new
                        {
                            Id = 76,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "France",
                            Row = 76,
                            ShortName = "FR",
                            Status = true
                        },
                        new
                        {
                            Id = 77,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "French Guiana",
                            Row = 77,
                            ShortName = "GF",
                            Status = true
                        },
                        new
                        {
                            Id = 78,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "French Polynesia",
                            Row = 78,
                            ShortName = "PF",
                            Status = true
                        },
                        new
                        {
                            Id = 79,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "French Southern Territories (the)",
                            Row = 79,
                            ShortName = "TF",
                            Status = true
                        },
                        new
                        {
                            Id = 80,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Gabon",
                            Row = 80,
                            ShortName = "GA",
                            Status = true
                        },
                        new
                        {
                            Id = 81,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Gambia (the)",
                            Row = 81,
                            ShortName = "GM",
                            Status = true
                        },
                        new
                        {
                            Id = 82,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Georgia",
                            Row = 82,
                            ShortName = "GE",
                            Status = true
                        },
                        new
                        {
                            Id = 83,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Germany",
                            Row = 83,
                            ShortName = "DE",
                            Status = true
                        },
                        new
                        {
                            Id = 84,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Ghana",
                            Row = 84,
                            ShortName = "GH",
                            Status = true
                        },
                        new
                        {
                            Id = 85,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Gibraltar",
                            Row = 85,
                            ShortName = "GI",
                            Status = true
                        },
                        new
                        {
                            Id = 86,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Greece",
                            Row = 86,
                            ShortName = "GR",
                            Status = true
                        },
                        new
                        {
                            Id = 87,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Greenland",
                            Row = 87,
                            ShortName = "GL",
                            Status = true
                        },
                        new
                        {
                            Id = 88,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Grenada",
                            Row = 88,
                            ShortName = "GD",
                            Status = true
                        },
                        new
                        {
                            Id = 89,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guadeloupe",
                            Row = 89,
                            ShortName = "GP",
                            Status = true
                        },
                        new
                        {
                            Id = 90,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guam",
                            Row = 90,
                            ShortName = "GU",
                            Status = true
                        },
                        new
                        {
                            Id = 91,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guatemala",
                            Row = 91,
                            ShortName = "GT",
                            Status = true
                        },
                        new
                        {
                            Id = 92,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guernsey",
                            Row = 92,
                            ShortName = "GG",
                            Status = true
                        },
                        new
                        {
                            Id = 93,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guinea",
                            Row = 93,
                            ShortName = "GN",
                            Status = true
                        },
                        new
                        {
                            Id = 94,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guinea-Bissau",
                            Row = 94,
                            ShortName = "GW",
                            Status = true
                        },
                        new
                        {
                            Id = 95,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guyana",
                            Row = 95,
                            ShortName = "GY",
                            Status = true
                        },
                        new
                        {
                            Id = 96,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Haiti",
                            Row = 96,
                            ShortName = "HT",
                            Status = true
                        },
                        new
                        {
                            Id = 97,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Heard Island and McDonald Islands",
                            Row = 97,
                            ShortName = "HM",
                            Status = true
                        },
                        new
                        {
                            Id = 98,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Holy See (the)",
                            Row = 98,
                            ShortName = "VA",
                            Status = true
                        },
                        new
                        {
                            Id = 99,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Honduras",
                            Row = 99,
                            ShortName = "HN",
                            Status = true
                        },
                        new
                        {
                            Id = 100,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Hong Kong",
                            Row = 100,
                            ShortName = "HK",
                            Status = true
                        },
                        new
                        {
                            Id = 101,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Hungary",
                            Row = 101,
                            ShortName = "HU",
                            Status = true
                        },
                        new
                        {
                            Id = 102,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Jamaica",
                            Row = 102,
                            ShortName = "JM",
                            Status = true
                        },
                        new
                        {
                            Id = 103,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Japan",
                            Row = 103,
                            ShortName = "JP",
                            Status = true
                        },
                        new
                        {
                            Id = 104,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Jersey",
                            Row = 104,
                            ShortName = "JE",
                            Status = true
                        },
                        new
                        {
                            Id = 105,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Jordan",
                            Row = 105,
                            ShortName = "JO",
                            Status = true
                        },
                        new
                        {
                            Id = 106,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Kazakhstan",
                            Row = 106,
                            ShortName = "KZ",
                            Status = true
                        },
                        new
                        {
                            Id = 107,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Kenya",
                            Row = 107,
                            ShortName = "KE",
                            Status = true
                        },
                        new
                        {
                            Id = 108,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Kiribati",
                            Row = 108,
                            ShortName = "KI",
                            Status = true
                        },
                        new
                        {
                            Id = 109,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Korea (the Democratic Peoples Republic of)",
                            Row = 109,
                            ShortName = "KP",
                            Status = true
                        },
                        new
                        {
                            Id = 110,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Korea (the Republic of)",
                            Row = 110,
                            ShortName = "KR",
                            Status = true
                        },
                        new
                        {
                            Id = 111,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Kuwait",
                            Row = 111,
                            ShortName = "KW",
                            Status = true
                        },
                        new
                        {
                            Id = 112,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Kyrgyzstan",
                            Row = 112,
                            ShortName = "KG",
                            Status = true
                        },
                        new
                        {
                            Id = 113,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Lao Peoples Democratic Republic(the)",
                            Row = 113,
                            ShortName = "LA",
                            Status = true
                        },
                        new
                        {
                            Id = 114,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Latvia",
                            Row = 114,
                            ShortName = "LV",
                            Status = true
                        },
                        new
                        {
                            Id = 115,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Lebanon",
                            Row = 115,
                            ShortName = "LB",
                            Status = true
                        },
                        new
                        {
                            Id = 116,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Lesotho",
                            Row = 116,
                            ShortName = "LS",
                            Status = true
                        },
                        new
                        {
                            Id = 117,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Liberia",
                            Row = 117,
                            ShortName = "LR",
                            Status = true
                        },
                        new
                        {
                            Id = 118,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Libya",
                            Row = 118,
                            ShortName = "LY",
                            Status = true
                        },
                        new
                        {
                            Id = 119,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Liechtenstein",
                            Row = 119,
                            ShortName = "LI",
                            Status = true
                        },
                        new
                        {
                            Id = 120,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Lithuania",
                            Row = 120,
                            ShortName = "LT",
                            Status = true
                        },
                        new
                        {
                            Id = 121,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Luxembourg",
                            Row = 121,
                            ShortName = "LU",
                            Status = true
                        },
                        new
                        {
                            Id = 122,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Macao",
                            Row = 122,
                            ShortName = "MO",
                            Status = true
                        },
                        new
                        {
                            Id = 123,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Madagascar",
                            Row = 123,
                            ShortName = "MG",
                            Status = true
                        },
                        new
                        {
                            Id = 124,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Malawi",
                            Row = 124,
                            ShortName = "MW",
                            Status = true
                        },
                        new
                        {
                            Id = 125,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Malaysia",
                            Row = 125,
                            ShortName = "MY",
                            Status = true
                        },
                        new
                        {
                            Id = 126,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Maldives",
                            Row = 126,
                            ShortName = "MV",
                            Status = true
                        },
                        new
                        {
                            Id = 127,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Mali",
                            Row = 127,
                            ShortName = "ML",
                            Status = true
                        },
                        new
                        {
                            Id = 128,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Malta",
                            Row = 128,
                            ShortName = "MT",
                            Status = true
                        },
                        new
                        {
                            Id = 129,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Marshall Islands (the)",
                            Row = 129,
                            ShortName = "MH",
                            Status = true
                        },
                        new
                        {
                            Id = 130,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Martinique",
                            Row = 130,
                            ShortName = "MQ",
                            Status = true
                        },
                        new
                        {
                            Id = 131,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Mauritania",
                            Row = 131,
                            ShortName = "MR",
                            Status = true
                        },
                        new
                        {
                            Id = 132,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Mauritius",
                            Row = 132,
                            ShortName = "MU",
                            Status = true
                        },
                        new
                        {
                            Id = 133,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Mayotte",
                            Row = 133,
                            ShortName = "YT",
                            Status = true
                        },
                        new
                        {
                            Id = 134,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Mexico",
                            Row = 134,
                            ShortName = "MX",
                            Status = true
                        },
                        new
                        {
                            Id = 135,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Micronesia (Federated States of)",
                            Row = 135,
                            ShortName = "FM",
                            Status = true
                        },
                        new
                        {
                            Id = 136,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Moldova (the Republic of)",
                            Row = 136,
                            ShortName = "MD",
                            Status = true
                        },
                        new
                        {
                            Id = 137,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Monaco",
                            Row = 137,
                            ShortName = "MC",
                            Status = true
                        },
                        new
                        {
                            Id = 138,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Mongolia",
                            Row = 138,
                            ShortName = "MN",
                            Status = true
                        },
                        new
                        {
                            Id = 139,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Montenegro",
                            Row = 139,
                            ShortName = "ME",
                            Status = true
                        },
                        new
                        {
                            Id = 140,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Montserrat",
                            Row = 140,
                            ShortName = "MS",
                            Status = true
                        },
                        new
                        {
                            Id = 141,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Morocco",
                            Row = 141,
                            ShortName = "MA",
                            Status = true
                        },
                        new
                        {
                            Id = 142,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Mozambique",
                            Row = 142,
                            ShortName = "MZ",
                            Status = true
                        },
                        new
                        {
                            Id = 143,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Myanmar",
                            Row = 143,
                            ShortName = "MM",
                            Status = true
                        },
                        new
                        {
                            Id = 144,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Namibia",
                            Row = 144,
                            ShortName = "NA",
                            Status = true
                        },
                        new
                        {
                            Id = 145,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Nauru",
                            Row = 145,
                            ShortName = "NR",
                            Status = true
                        },
                        new
                        {
                            Id = 146,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Nepal",
                            Row = 146,
                            ShortName = "NP",
                            Status = true
                        },
                        new
                        {
                            Id = 147,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Netherlands (the)",
                            Row = 147,
                            ShortName = "NL",
                            Status = true
                        },
                        new
                        {
                            Id = 148,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "New Caledonia",
                            Row = 148,
                            ShortName = "NC",
                            Status = true
                        },
                        new
                        {
                            Id = 149,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "New Zealand",
                            Row = 149,
                            ShortName = "NZ",
                            Status = true
                        },
                        new
                        {
                            Id = 150,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Nicaragua",
                            Row = 150,
                            ShortName = "NI",
                            Status = true
                        },
                        new
                        {
                            Id = 151,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Niger (the)",
                            Row = 151,
                            ShortName = "NE",
                            Status = true
                        },
                        new
                        {
                            Id = 152,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Nigeria",
                            Row = 152,
                            ShortName = "NG",
                            Status = true
                        },
                        new
                        {
                            Id = 153,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Niue",
                            Row = 153,
                            ShortName = "NU",
                            Status = true
                        },
                        new
                        {
                            Id = 154,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Norfolk Island",
                            Row = 154,
                            ShortName = "NF",
                            Status = true
                        },
                        new
                        {
                            Id = 155,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Northern Mariana Islands (the)",
                            Row = 155,
                            ShortName = "MP",
                            Status = true
                        },
                        new
                        {
                            Id = 156,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Norway",
                            Row = 156,
                            ShortName = "NO",
                            Status = true
                        },
                        new
                        {
                            Id = 157,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Oman",
                            Row = 157,
                            ShortName = "OM",
                            Status = true
                        },
                        new
                        {
                            Id = 158,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Pakistan",
                            Row = 158,
                            ShortName = "PK",
                            Status = true
                        },
                        new
                        {
                            Id = 159,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Palau",
                            Row = 159,
                            ShortName = "PW",
                            Status = true
                        },
                        new
                        {
                            Id = 160,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Palestine, State of",
                            Row = 160,
                            ShortName = "PS",
                            Status = true
                        },
                        new
                        {
                            Id = 161,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Panama",
                            Row = 161,
                            ShortName = "PA",
                            Status = true
                        },
                        new
                        {
                            Id = 162,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Papua New Guinea",
                            Row = 162,
                            ShortName = "PG",
                            Status = true
                        },
                        new
                        {
                            Id = 163,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Paraguay",
                            Row = 163,
                            ShortName = "PY",
                            Status = true
                        },
                        new
                        {
                            Id = 164,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Peru",
                            Row = 164,
                            ShortName = "PE",
                            Status = true
                        },
                        new
                        {
                            Id = 165,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Philippines (the)",
                            Row = 165,
                            ShortName = "PH",
                            Status = true
                        },
                        new
                        {
                            Id = 166,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Pitcairn",
                            Row = 166,
                            ShortName = "PN",
                            Status = true
                        },
                        new
                        {
                            Id = 167,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Poland",
                            Row = 167,
                            ShortName = "PL",
                            Status = true
                        },
                        new
                        {
                            Id = 168,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Portugal",
                            Row = 168,
                            ShortName = "PT",
                            Status = true
                        },
                        new
                        {
                            Id = 169,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Puerto Rico",
                            Row = 169,
                            ShortName = "PR",
                            Status = true
                        },
                        new
                        {
                            Id = 170,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Qatar",
                            Row = 170,
                            ShortName = "QA",
                            Status = true
                        },
                        new
                        {
                            Id = 171,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Republic of North Macedonia",
                            Row = 171,
                            ShortName = "MK",
                            Status = true
                        },
                        new
                        {
                            Id = 172,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Romania",
                            Row = 172,
                            ShortName = "RO",
                            Status = true
                        },
                        new
                        {
                            Id = 173,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Russian Federation (the)",
                            Row = 173,
                            ShortName = "RU",
                            Status = true
                        },
                        new
                        {
                            Id = 174,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Rwanda",
                            Row = 174,
                            ShortName = "RW",
                            Status = true
                        },
                        new
                        {
                            Id = 175,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Réunion",
                            Row = 175,
                            ShortName = "RE",
                            Status = true
                        },
                        new
                        {
                            Id = 176,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Saint Barthélemy",
                            Row = 176,
                            ShortName = "BL",
                            Status = true
                        },
                        new
                        {
                            Id = 177,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Saint Helena, Ascension and Tristan da Cunha",
                            Row = 177,
                            ShortName = "SH",
                            Status = true
                        },
                        new
                        {
                            Id = 178,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Saint Kitts and Nevis",
                            Row = 178,
                            ShortName = "KN",
                            Status = true
                        },
                        new
                        {
                            Id = 179,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Saint Lucia",
                            Row = 179,
                            ShortName = "LC",
                            Status = true
                        },
                        new
                        {
                            Id = 180,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Saint Martin (French part)",
                            Row = 180,
                            ShortName = "MF",
                            Status = true
                        },
                        new
                        {
                            Id = 181,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Saint Pierre and Miquelon",
                            Row = 181,
                            ShortName = "PM",
                            Status = true
                        },
                        new
                        {
                            Id = 182,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Saint Vincent and the Grenadines",
                            Row = 182,
                            ShortName = "VC",
                            Status = true
                        },
                        new
                        {
                            Id = 183,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Samoa",
                            Row = 183,
                            ShortName = "WS",
                            Status = true
                        },
                        new
                        {
                            Id = 184,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "San Marino",
                            Row = 184,
                            ShortName = "SM",
                            Status = true
                        },
                        new
                        {
                            Id = 185,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Sao Tome and Principe",
                            Row = 185,
                            ShortName = "ST",
                            Status = true
                        },
                        new
                        {
                            Id = 186,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Saudi Arabia",
                            Row = 186,
                            ShortName = "SA",
                            Status = true
                        },
                        new
                        {
                            Id = 187,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Senegal",
                            Row = 187,
                            ShortName = "SN",
                            Status = true
                        },
                        new
                        {
                            Id = 188,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Serbia",
                            Row = 188,
                            ShortName = "RS",
                            Status = true
                        },
                        new
                        {
                            Id = 189,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Seychelles",
                            Row = 189,
                            ShortName = "SC",
                            Status = true
                        },
                        new
                        {
                            Id = 190,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Sierra Leone",
                            Row = 190,
                            ShortName = "SL",
                            Status = true
                        },
                        new
                        {
                            Id = 191,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Singapore",
                            Row = 191,
                            ShortName = "SG",
                            Status = true
                        },
                        new
                        {
                            Id = 192,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Sint Maarten (Dutch part)",
                            Row = 192,
                            ShortName = "SX",
                            Status = true
                        },
                        new
                        {
                            Id = 193,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Slovakia",
                            Row = 193,
                            ShortName = "SK",
                            Status = true
                        },
                        new
                        {
                            Id = 194,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Slovenia",
                            Row = 194,
                            ShortName = "SI",
                            Status = true
                        },
                        new
                        {
                            Id = 195,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Solomon Islands",
                            Row = 195,
                            ShortName = "SB",
                            Status = true
                        },
                        new
                        {
                            Id = 196,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Somalia",
                            Row = 196,
                            ShortName = "SO",
                            Status = true
                        },
                        new
                        {
                            Id = 197,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "South Africa",
                            Row = 197,
                            ShortName = "ZA",
                            Status = true
                        },
                        new
                        {
                            Id = 198,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "South Georgia and the South Sandwich Islands",
                            Row = 198,
                            ShortName = "GS",
                            Status = true
                        },
                        new
                        {
                            Id = 199,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "South Sudan",
                            Row = 199,
                            ShortName = "SS",
                            Status = true
                        },
                        new
                        {
                            Id = 200,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Spain",
                            Row = 200,
                            ShortName = "ES",
                            Status = true
                        },
                        new
                        {
                            Id = 201,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Sri Lanka",
                            Row = 201,
                            ShortName = "LK",
                            Status = true
                        },
                        new
                        {
                            Id = 202,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Sudan (the)",
                            Row = 202,
                            ShortName = "SD",
                            Status = true
                        },
                        new
                        {
                            Id = 203,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Suriname",
                            Row = 203,
                            ShortName = "SR",
                            Status = true
                        },
                        new
                        {
                            Id = 204,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Svalbard and Jan Mayen",
                            Row = 204,
                            ShortName = "SJ",
                            Status = true
                        },
                        new
                        {
                            Id = 205,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Sweden",
                            Row = 205,
                            ShortName = "SE",
                            Status = true
                        },
                        new
                        {
                            Id = 206,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Switzerland",
                            Row = 206,
                            ShortName = "CH",
                            Status = true
                        },
                        new
                        {
                            Id = 207,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Syrian Arab Republic",
                            Row = 207,
                            ShortName = "SY",
                            Status = true
                        },
                        new
                        {
                            Id = 208,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Taiwan (Province of China)",
                            Row = 208,
                            ShortName = "TW",
                            Status = true
                        },
                        new
                        {
                            Id = 209,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tajikistan",
                            Row = 209,
                            ShortName = "TJ",
                            Status = true
                        },
                        new
                        {
                            Id = 210,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tanzania, United Republic of",
                            Row = 210,
                            ShortName = "TZ",
                            Status = true
                        },
                        new
                        {
                            Id = 211,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Thailand",
                            Row = 211,
                            ShortName = "TH",
                            Status = true
                        },
                        new
                        {
                            Id = 212,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Timor-Leste",
                            Row = 212,
                            ShortName = "TL",
                            Status = true
                        },
                        new
                        {
                            Id = 213,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Togo",
                            Row = 213,
                            ShortName = "TG",
                            Status = true
                        },
                        new
                        {
                            Id = 214,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tokelau",
                            Row = 214,
                            ShortName = "TK",
                            Status = true
                        },
                        new
                        {
                            Id = 215,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tonga",
                            Row = 215,
                            ShortName = "TO",
                            Status = true
                        },
                        new
                        {
                            Id = 216,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Trinidad and Tobago",
                            Row = 216,
                            ShortName = "TT",
                            Status = true
                        },
                        new
                        {
                            Id = 217,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tunisia",
                            Row = 217,
                            ShortName = "TN",
                            Status = true
                        },
                        new
                        {
                            Id = 218,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Turkey",
                            Row = 218,
                            ShortName = "TR",
                            Status = true
                        },
                        new
                        {
                            Id = 219,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Turkmenistan",
                            Row = 219,
                            ShortName = "TM",
                            Status = true
                        },
                        new
                        {
                            Id = 220,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Turks and Caicos Islands (the)",
                            Row = 220,
                            ShortName = "TC",
                            Status = true
                        },
                        new
                        {
                            Id = 221,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tuvalu",
                            Row = 221,
                            ShortName = "TV",
                            Status = true
                        },
                        new
                        {
                            Id = 222,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Uganda",
                            Row = 222,
                            ShortName = "UG",
                            Status = true
                        },
                        new
                        {
                            Id = 223,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Ukraine",
                            Row = 223,
                            ShortName = "UA",
                            Status = true
                        },
                        new
                        {
                            Id = 224,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "United Arab Emirates (the)",
                            Row = 224,
                            ShortName = "AE",
                            Status = true
                        },
                        new
                        {
                            Id = 225,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "United Kingdom of Great Britain and Northern Ireland (the)",
                            Row = 225,
                            ShortName = "GB",
                            Status = true
                        },
                        new
                        {
                            Id = 226,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "United States Minor Outlying Islands (the)",
                            Row = 226,
                            ShortName = "UM",
                            Status = true
                        },
                        new
                        {
                            Id = 227,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "United States of America (the)",
                            Row = 227,
                            ShortName = "US",
                            Status = true
                        },
                        new
                        {
                            Id = 228,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Uruguay",
                            Row = 228,
                            ShortName = "UY",
                            Status = true
                        },
                        new
                        {
                            Id = 229,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Uzbekistan",
                            Row = 229,
                            ShortName = "UZ",
                            Status = true
                        },
                        new
                        {
                            Id = 230,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Vanuatu",
                            Row = 230,
                            ShortName = "VU",
                            Status = true
                        },
                        new
                        {
                            Id = 231,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Venezuela (Bolivarian Republic of)",
                            Row = 231,
                            ShortName = "VE",
                            Status = true
                        },
                        new
                        {
                            Id = 232,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Viet Nam",
                            Row = 232,
                            ShortName = "VN",
                            Status = true
                        },
                        new
                        {
                            Id = 233,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Virgin Islands (British)",
                            Row = 233,
                            ShortName = "VG",
                            Status = true
                        },
                        new
                        {
                            Id = 234,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Virgin Islands (U.S.)",
                            Row = 234,
                            ShortName = "VI",
                            Status = true
                        },
                        new
                        {
                            Id = 235,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Wallis and Futuna",
                            Row = 235,
                            ShortName = "WF",
                            Status = true
                        },
                        new
                        {
                            Id = 236,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Western Sahara",
                            Row = 236,
                            ShortName = "EH",
                            Status = true
                        },
                        new
                        {
                            Id = 237,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Yemen",
                            Row = 237,
                            ShortName = "YE",
                            Status = true
                        },
                        new
                        {
                            Id = 238,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Zambia",
                            Row = 238,
                            ShortName = "ZM",
                            Status = true
                        },
                        new
                        {
                            Id = 239,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Zimbabwe",
                            Row = 239,
                            ShortName = "ZW",
                            Status = true
                        },
                        new
                        {
                            Id = 240,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Åland Islands",
                            Row = 240,
                            ShortName = "AX",
                            Status = true
                        },
                        new
                        {
                            Id = 241,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Iceland",
                            Row = 241,
                            ShortName = "IS",
                            Status = true
                        },
                        new
                        {
                            Id = 242,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "India",
                            Row = 242,
                            ShortName = "IN",
                            Status = true
                        },
                        new
                        {
                            Id = 243,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Indonesia",
                            Row = 243,
                            ShortName = "ID",
                            Status = true
                        },
                        new
                        {
                            Id = 244,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Iran (Islamic Republic of)",
                            Row = 244,
                            ShortName = "IR",
                            Status = true
                        },
                        new
                        {
                            Id = 245,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Iraq",
                            Row = 245,
                            ShortName = "IQ",
                            Status = true
                        },
                        new
                        {
                            Id = 246,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Ireland",
                            Row = 246,
                            ShortName = "IE",
                            Status = true
                        },
                        new
                        {
                            Id = 247,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Isle of Man",
                            Row = 247,
                            ShortName = "IM",
                            Status = true
                        },
                        new
                        {
                            Id = 248,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Israel",
                            Row = 248,
                            ShortName = "IL",
                            Status = true
                        },
                        new
                        {
                            Id = 249,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Italy",
                            Row = 249,
                            ShortName = "IT",
                            Status = true
                        });
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Depo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepoAdres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepoAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepoKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.ToTable("Depos");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DepoKoduTanım", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tanım")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.ToTable("DepoKoduTanıms");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Dosya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Açıklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DosyaAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DosyaYolu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dosyas");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DosyaİçerikGörmeYetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("UserId");

                    b.ToTable("DosyaİçerikGörmeYetkis");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DosyaİndirmeYetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("UserId");

                    b.ToTable("DosyaİndirmeYetkis");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DosyaİsimDeğiştirmeYetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("UserId");

                    b.ToTable("DosyaİsimDeğiştirmeYetkis");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DosyaSilmeYetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("UserId");

                    b.ToTable("DosyaSilmeYetkis");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DosyaYetkiYetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("UserId");

                    b.ToTable("DosyaYetkiYetkis");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Döküman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DosyaYolu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dökümans");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DökümanAlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AlanTipi")
                        .HasColumnType("int");

                    b.Property<string>("DefaultString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DolduralacakAlanString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DökümanId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DökümanId");

                    b.ToTable("DökümanAlans");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DökümanSelectBoxItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DökümanAlanId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DökümanAlanId");

                    b.ToTable("DökümanSelectBoxItems");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.ExportedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExportedFiles");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.FaturaBaslık", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CariId")
                        .HasColumnType("int");

                    b.Property<int>("FaturaTürü")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CariId");

                    b.ToTable("FaturaBaslıks");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.FaturaDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Adet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<int>("FaturaBaslıkId")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("KdvOranı")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StokId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("FaturaBaslıkId");

                    b.HasIndex("StokId");

                    b.ToTable("FaturaDetay");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Fiyat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GeçerliFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GeçerliKdvOranı")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StokId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StokId");

                    b.ToTable("Fiyats");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Iş", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IşAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TezgahId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.HasIndex("TezgahId");

                    b.ToTable("Işs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.İşEmri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HedefÜretim")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<int>("ReçeteId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İşEmriAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.HasIndex("ReçeteId");

                    b.ToTable("İşEmris");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodAnaUrun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BoxesInPalet")
                        .HasColumnType("int");

                    b.Property<string>("Gtin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasPack")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Origin")
                        .HasColumnType("int");

                    b.Property<int?>("PacksInBox")
                        .HasColumnType("int");

                    b.Property<int?>("ProductInBox")
                        .HasColumnType("int");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductsInPack")
                        .HasColumnType("int");

                    b.Property<int>("RafCycleTime")
                        .HasColumnType("int");

                    b.Property<string>("RafCycleUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KareKodAnaUruns");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodBildirimEmri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Adet")
                        .HasColumnType("int");

                    b.Property<string>("Açıklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BildirimDurumu")
                        .HasColumnType("int");

                    b.Property<string>("DökümanNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DökümanTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaturaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KareKodAnaUrunId")
                        .HasColumnType("int");

                    b.Property<int>("KareKodBildirimTürüId")
                        .HasColumnType("int");

                    b.Property<int?>("KareKodDeaktivasyonTürüId")
                        .HasColumnType("int");

                    b.Property<int?>("KareKodMüşteriId")
                        .HasColumnType("int");

                    b.Property<int?>("PtsGönderimDurumu")
                        .HasColumnType("int");

                    b.Property<string>("Receiver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiparişNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KareKodAnaUrunId");

                    b.HasIndex("KareKodBildirimTürüId");

                    b.HasIndex("KareKodDeaktivasyonTürüId");

                    b.HasIndex("KareKodMüşteriId");

                    b.ToTable("KareKodBildirimEmris");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodBildirimStokMTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BildirimDurumu")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KareKodBildirimEmriId")
                        .HasColumnType("int");

                    b.Property<int?>("KareKodStokId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KareKodBildirimEmriId");

                    b.HasIndex("KareKodStokId");

                    b.ToTable("KareKodBildirimStokMTMs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodBildirimTürü", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BildirimTürü")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BildirimTürüKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KareKodBildirimTürüs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BildirimTürü = "Üretim",
                            BildirimTürüKodu = "M",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BildirimTürü = "Satış",
                            BildirimTürüKodu = "S",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BildirimTürü = "Satış Iptal",
                            BildirimTürüKodu = "C",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BildirimTürü = "Ihracat",
                            BildirimTürüKodu = "X",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BildirimTürü = "Ithalat",
                            BildirimTürüKodu = "I",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BildirimTürü = "Deaktivasyon",
                            BildirimTürüKodu = "D",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BildirimTürü = "Mal Alım",
                            BildirimTürüKodu = "A",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BildirimTürü = "Mal Iade",
                            BildirimTürüKodu = "F",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BildirimTürü = "Mal Devir",
                            BildirimTürüKodu = "S",
                            IsDeleted = false,
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BildirimTürü = "Mal Devir Iptal",
                            BildirimTürüKodu = "C",
                            IsDeleted = false,
                            Status = true
                        });
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodBildirimUrun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KareKodUrunlerId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KareKodUrunlerId");

                    b.ToTable("KareKodBildirimUruns");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodDeaktivasyonTürü", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeaktivasyonKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Sebep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KareKodDeaktivasyonTürüs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeaktivasyonKodu = "10",
                            IsDeleted = false,
                            Sebep = "SİSTEMDEN ÇIKARMA",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeaktivasyonKodu = "20",
                            IsDeleted = false,
                            Sebep = "ÜRETİM FİRELERİ",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeaktivasyonKodu = "30",
                            IsDeleted = false,
                            Sebep = "GERİ ÇEKME SEBEBİYLE İMHA",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeaktivasyonKodu = "40",
                            IsDeleted = false,
                            Sebep = "MİAT SEBEBİYLE İMHA",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeaktivasyonKodu = "50",
                            IsDeleted = false,
                            Sebep = "REVİZYON",
                            Status = true
                        });
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodIsEmri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BaseProductId")
                        .HasColumnType("int");

                    b.Property<int>("BoxCount")
                        .HasColumnType("int");

                    b.Property<int>("BoxPerPalet")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KareKodIsEmriIstasyonMTMId")
                        .HasColumnType("int");

                    b.Property<int?>("KareKodIsEmriIstasyonMTMId1")
                        .HasColumnType("int");

                    b.Property<string>("Lot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int?>("PackCount")
                        .HasColumnType("int");

                    b.Property<int?>("PackPerBox")
                        .HasColumnType("int");

                    b.Property<int>("PaletCount")
                        .HasColumnType("int");

                    b.Property<int>("PlannedProduct")
                        .HasColumnType("int");

                    b.Property<int?>("ProductPerBox")
                        .HasColumnType("int");

                    b.Property<int?>("ProductPerPack")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseProductId");

                    b.HasIndex("KareKodIsEmriIstasyonMTMId1");

                    b.ToTable("kareKodIsEmris");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodIsEmriIstasyonMTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KareKodIsEmriId")
                        .HasColumnType("int");

                    b.Property<int?>("KareKodIstasyonId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KareKodIsEmriIstasyonMTMs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodIstasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAdresi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IstasyonAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KareKodIsEmriIstasyonMTMId")
                        .HasColumnType("int");

                    b.Property<int?>("KareKodIsEmriIstasyonMTMId1")
                        .HasColumnType("int");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("X1JetIpAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YazıcıIpAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KareKodIsEmriIstasyonMTMId1");

                    b.ToTable("KareKodIstasyons");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodKoli", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KareKodIsEmriId")
                        .HasColumnType("int");

                    b.Property<int>("PaletSeriNo")
                        .HasColumnType("int");

                    b.Property<string>("SSCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriNo")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KareKodIsEmriId");

                    b.ToTable("KareKodKolis");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodMüşteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("ToGLN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KareKodMüşteris");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodMüşteriYetkilileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KareKodMüşteriId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KareKodMüşteriId");

                    b.ToTable("KareKodMüşteriYetkilileri");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodPalet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KareKodIsEmriId")
                        .HasColumnType("int");

                    b.Property<string>("SSCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriNo")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KareKodIsEmriId");

                    b.ToTable("KareKodPalets");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodStok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxSscc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gtin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InStock")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Md")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationStatus")
                        .HasColumnType("int");

                    b.Property<string>("PackSscc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaletSscc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Sn")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Xd")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KareKodStoks");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodUrunler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BoxSn")
                        .HasColumnType("int");

                    b.Property<string>("BoxSscc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gtin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Md")
                        .HasColumnType("datetime2");

                    b.Property<int>("PackSn")
                        .HasColumnType("int");

                    b.Property<string>("PackSscc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaletSn")
                        .HasColumnType("int");

                    b.Property<string>("PaletSscc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Sn")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WoorId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Xd")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("KareKodUrunlers");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.ProgramŞirketGrup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YetkiliİletişimNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ŞirketAktifmi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProgramŞirketGrups");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.ProgramŞirketKullanıcı", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.HasIndex("UserId");

                    b.ToTable("ProgramŞirketKullanıcıs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Reçete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<string>("ReçeteAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.ToTable("Reçetes");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Reçete_Iş_MTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("IşId")
                        .HasColumnType("int");

                    b.Property<int?>("KullanılacakDepoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("KullanılacakStokAdeti")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("KullanılacakStokId")
                        .HasColumnType("int");

                    b.Property<int?>("ReçeteId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UretilecekDepoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UretilecekStokAdeti")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UretilecekStokId")
                        .HasColumnType("int");

                    b.Property<string>("İşAçıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IşId");

                    b.HasIndex("KullanılacakDepoId");

                    b.HasIndex("KullanılacakStokId");

                    b.HasIndex("ReçeteId");

                    b.HasIndex("UretilecekDepoId");

                    b.HasIndex("UretilecekStokId");

                    b.ToTable("Reçete_Iş_MTM");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Reçete_Tezgah_MTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ReçeteId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TezgahId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReçeteId");

                    b.HasIndex("TezgahId");

                    b.ToTable("Reçete_Tezgah_MTM");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Stok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Açıklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BirimId")
                        .HasColumnType("int");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("StokAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StokKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ÜstStokId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("DepoId");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.ToTable("Stoks");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.StokHareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Adet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CariId")
                        .HasColumnType("int");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int");

                    b.Property<int?>("HareketTipi")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("StokId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CariId");

                    b.HasIndex("DepoId");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.HasIndex("StokId");

                    b.ToTable("StokHarekets");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.StokKoduTanım", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tanım")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.ToTable("StokKoduTanıms");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.SystemUserLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAdress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Log")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrxResult")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("SystemUserLogs", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Şantiye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Şantiyes");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Tezgah", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Açıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TezgahAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.ToTable("Tezgah");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Tezgah_Iş_MTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IşId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TezgahId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IşId");

                    b.HasIndex("TezgahId");

                    b.ToTable("Tezgah_Iş_MTMs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramŞirketGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("İşEmriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramŞirketGrupId");

                    b.HasIndex("İşEmriId");

                    b.ToTable("Uruns");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.UrunAşamaları", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("IşId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TamamlanmaDurumu")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.Property<int?>("İşEmriId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("İşeBaşlamaZamanı")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("İşiBitirmeZamanı")
                        .HasColumnType("datetime2");

                    b.Property<string>("İşiÜstlenenKullanıcıId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IşId");

                    b.HasIndex("UrunId");

                    b.HasIndex("İşEmriId");

                    b.HasIndex("İşiÜstlenenKullanıcıId");

                    b.ToTable("UrunAşamalarıs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.UserLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChangeUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Log")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("UserLogs", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.Reçete_Stok_MTM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("KullanılacakAdet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReçeteId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StokId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReçeteId");

                    b.HasIndex("StokId");

                    b.ToTable("Reçete_Stok_MTM");
                });

            modelBuilder.Entity("Entities.Concrete.SideBarMenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconCss")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsParent")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("SideBarMenuItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-gear",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Ayarlar",
                            Row = 1999,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Menü Ayarları",
                            ParentId = 1,
                            Row = 1999,
                            Status = true,
                            Url = "/Setting/MenuList"
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Log Arama",
                            ParentId = 1,
                            Row = 299,
                            Status = true,
                            Url = "/Setting/SystemUserLogListSearch"
                        },
                        new
                        {
                            Id = 4,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Ulke Ayarları",
                            ParentId = 1,
                            Row = 39999,
                            Status = true,
                            Url = "/Setting/CountryList"
                        },
                        new
                        {
                            Id = 5,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-address-card",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Role İşlemleri",
                            Row = 2999,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 6,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Rol Listesi",
                            ParentId = 5,
                            Row = 199999,
                            Status = true,
                            Url = "/Role/RoleList"
                        },
                        new
                        {
                            Id = 7,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Rol Ekle",
                            ParentId = 5,
                            Row = 299999,
                            Status = true,
                            Url = "/Role/CreateRole"
                        },
                        new
                        {
                            Id = 8,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Kullanıcı İşlemleri",
                            Row = 3999,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 9,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Arama",
                            ParentId = 8,
                            Row = 1999,
                            Status = true,
                            Url = "/User/Search"
                        },
                        new
                        {
                            Id = 10,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Kullanıcı Ekle",
                            ParentId = 8,
                            Row = 299,
                            Status = true,
                            Url = "/User/AddUser"
                        },
                        new
                        {
                            Id = 28,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-chalkboard-user",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Diğer İşlemler",
                            Row = 9999,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 29,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Bize Yazanlar",
                            ParentId = 28,
                            Row = 10999,
                            Status = true,
                            Url = "/SystemAdmin/ContactList"
                        },
                        new
                        {
                            Id = 30,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-address-card",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Hesabım",
                            Row = 11,
                            Status = true,
                            Url = "/Account/accountinformation"
                        },
                        new
                        {
                            Id = 31,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-right-from-bracket",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Çıkış Yap",
                            Row = 12,
                            Status = true,
                            Url = "/Account/Logout"
                        },
                        new
                        {
                            Id = 34,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-right-from-bracket",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Announcement",
                            Row = 12,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 61,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Üretim",
                            Row = 3,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 62,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Reçete",
                            ParentId = 61,
                            Row = 2,
                            Status = true,
                            Url = "/Reçete/Index"
                        },
                        new
                        {
                            Id = 63,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Tezgah",
                            ParentId = 61,
                            Row = 3,
                            Status = true,
                            Url = "/Tezgah/Index"
                        },
                        new
                        {
                            Id = 64,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Iş",
                            ParentId = 61,
                            Row = 4,
                            Status = true,
                            Url = "/Iş/Index"
                        },
                        new
                        {
                            Id = 65,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-receipt",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Iş Emri",
                            ParentId = 61,
                            Row = 1,
                            Status = true,
                            Url = "/IşEmri/Index"
                        },
                        new
                        {
                            Id = 41,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-receipt",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Depo",
                            Row = 12,
                            Status = true,
                            Url = "/Depo/Index"
                        },
                        new
                        {
                            Id = 59,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Yönetim",
                            Row = 3,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 60,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Program",
                            ParentId = 59,
                            Row = 1,
                            Status = true,
                            Url = "/Program/Index"
                        },
                        new
                        {
                            Id = 43,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Cariler",
                            Row = 3,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 58,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Cariler",
                            ParentId = 43,
                            Row = 1,
                            Status = true,
                            Url = "/Cari/Cariler"
                        },
                        new
                        {
                            Id = 44,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Müşteriler",
                            ParentId = 43,
                            Row = 1,
                            Status = true,
                            Url = "/Cari/Müşteriler"
                        },
                        new
                        {
                            Id = 45,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Tedarikçiler",
                            ParentId = 43,
                            Row = 2,
                            Status = true,
                            Url = "/Cari/Tedarikçiler"
                        },
                        new
                        {
                            Id = 46,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Şantiye",
                            Row = 3,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 47,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Şantiyeler",
                            ParentId = 46,
                            Row = 1,
                            Status = true,
                            Url = "/Şantiye/Index"
                        },
                        new
                        {
                            Id = 48,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Stok",
                            Row = 3,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 49,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Stok",
                            ParentId = 48,
                            Row = 1,
                            Status = true,
                            Url = "/Stok/Index"
                        },
                        new
                        {
                            Id = 50,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Hızlı Stok Kartı Oluştur",
                            ParentId = 48,
                            Row = 1,
                            Status = true,
                            Url = "/Stok/HızlıStokKartıOluştur"
                        },
                        new
                        {
                            Id = 66,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Belge Tasarımı",
                            Row = 3,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 67,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Tasarlanmış Belgeler",
                            ParentId = 66,
                            Row = 1,
                            Status = true,
                            Url = "/BelgeTasarım/Index"
                        },
                        new
                        {
                            Id = 51,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-receipt",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "DosyaYönetimi",
                            Row = 12,
                            Status = true,
                            Url = "/DosyaYönetimi/Index"
                        },
                        new
                        {
                            Id = 52,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "KareKod",
                            Row = 3,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 53,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "İş Emirleri",
                            ParentId = 52,
                            Row = 1,
                            Status = true,
                            Url = "/Karekod/Index"
                        },
                        new
                        {
                            Id = 54,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Bildirim Emirleri",
                            ParentId = 52,
                            Row = 1,
                            Status = true,
                            Url = "/KareKod/BildirimEmirleri"
                        },
                        new
                        {
                            Id = 68,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Ana Urunler",
                            ParentId = 52,
                            Row = 1,
                            Status = true,
                            Url = "/KareKod/AnaUrunler"
                        },
                        new
                        {
                            Id = 72,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "İstasyonlar",
                            ParentId = 52,
                            Row = 1,
                            Status = true,
                            Url = "/KareKod/Istasyon"
                        },
                        new
                        {
                            Id = 75,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Aktarım",
                            ParentId = 52,
                            Row = 1,
                            Status = true,
                            Url = "/KareKod/Aktarım"
                        },
                        new
                        {
                            Id = 77,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Müşteriler",
                            ParentId = 52,
                            Row = 1,
                            Status = true,
                            Url = "/KareKod/Müşteriler"
                        },
                        new
                        {
                            Id = 55,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Tanımlar",
                            Row = 3,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 56,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Stok Kodu Tanımı",
                            ParentId = 55,
                            Row = 1,
                            Status = true,
                            Url = "/Tanımlar/StokKoduTanım"
                        },
                        new
                        {
                            Id = 57,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Cari Kodu Tanımı",
                            ParentId = 55,
                            Row = 1,
                            Status = true,
                            Url = "/Tanımlar/CariKoduTanım"
                        },
                        new
                        {
                            Id = 78,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Depo Kodu Tanımı",
                            ParentId = 55,
                            Row = 1,
                            Status = true,
                            Url = "/Tanımlar/DepoKoduTanım"
                        },
                        new
                        {
                            Id = 69,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Fabrika Makina Yönetimi",
                            Row = 3,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 70,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "İlaç Fırın",
                            ParentId = 69,
                            Row = 1,
                            Status = true,
                            Url = "/FabrikaMakinaYönetimi/Fırın"
                        },
                        new
                        {
                            Id = 73,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon fa-solid fa-user-group",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = true,
                            Name = "Döküman Yönetimi",
                            Row = 3,
                            Status = true,
                            Url = "#"
                        },
                        new
                        {
                            Id = 74,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IconCss = "nav-icon far fa-circle text-info",
                            IsDeleted = false,
                            IsOpen = false,
                            IsParent = false,
                            Name = "Dökümanlar",
                            ParentId = 73,
                            Row = 1,
                            Status = true,
                            Url = "/Döküman/Index"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Token.UserRefreshToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("UserRefreshTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.AnnouncementRole", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Announcement", "Announcement")
                        .WithMany("AnnouncementRoles")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Announcement");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.AnnouncementUser", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Announcement", "Announcement")
                        .WithMany("AnnouncementUsers")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Announcement");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Barkod", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.OtherEntities.Stok", "Stok")
                        .WithMany()
                        .HasForeignKey("StokId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramŞirketGrup");

                    b.Navigation("Stok");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.BlokBilgi", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Stok", "Stok")
                        .WithMany("BlokBilgis")
                        .HasForeignKey("StokId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.OtherEntities.Şantiye", "Şantiye")
                        .WithMany("BlokBilgis")
                        .HasForeignKey("ŞantiyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stok");

                    b.Navigation("Şantiye");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.BlokGörüntü", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.BlokBilgi", "BlokBilgi")
                        .WithMany("BlokGörüntüs")
                        .HasForeignKey("BlokBilgiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlokBilgi");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Cari", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.Navigation("ProgramŞirketGrup");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.CariHareket", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Cari", "Cari")
                        .WithMany("CariHarekets")
                        .HasForeignKey("CariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cari");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.CariKoduTanım", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.Navigation("ProgramŞirketGrup");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Depo", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.Navigation("ProgramŞirketGrup");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DepoKoduTanım", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.Navigation("ProgramŞirketGrup");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DosyaİçerikGörmeYetki", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Dosya", "Dosya")
                        .WithMany()
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DosyaİndirmeYetki", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Dosya", "Dosya")
                        .WithMany()
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DosyaİsimDeğiştirmeYetki", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Dosya", "Dosya")
                        .WithMany()
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DosyaSilmeYetki", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Dosya", "Dosya")
                        .WithMany()
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DosyaYetkiYetki", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Dosya", "Dosya")
                        .WithMany()
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DökümanAlan", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Döküman", "Döküman")
                        .WithMany()
                        .HasForeignKey("DökümanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Döküman");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.DökümanSelectBoxItem", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.DökümanAlan", "DökümanAlan")
                        .WithMany()
                        .HasForeignKey("DökümanAlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DökümanAlan");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.FaturaBaslık", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Cari", "Cari")
                        .WithMany()
                        .HasForeignKey("CariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cari");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.FaturaDetay", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Birim", "Birim")
                        .WithMany()
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.OtherEntities.FaturaBaslık", "FaturaBaslık")
                        .WithMany("FaturaDetays")
                        .HasForeignKey("FaturaBaslıkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.OtherEntities.Stok", "Stok")
                        .WithMany()
                        .HasForeignKey("StokId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");

                    b.Navigation("FaturaBaslık");

                    b.Navigation("Stok");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Fiyat", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Stok", "Stok")
                        .WithMany("FiyatListesi")
                        .HasForeignKey("StokId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stok");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Iş", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.HasOne("Entities.Concrete.OtherEntities.Tezgah", "Tezgah")
                        .WithMany()
                        .HasForeignKey("TezgahId");

                    b.Navigation("ProgramŞirketGrup");

                    b.Navigation("Tezgah");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.İşEmri", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.HasOne("Entities.Concrete.OtherEntities.Reçete", "Reçete")
                        .WithMany()
                        .HasForeignKey("ReçeteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramŞirketGrup");

                    b.Navigation("Reçete");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodBildirimEmri", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.KareKodAnaUrun", "KareKodAnaUrun")
                        .WithMany()
                        .HasForeignKey("KareKodAnaUrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.OtherEntities.KareKodBildirimTürü", "KareKodBildirimTürü")
                        .WithMany()
                        .HasForeignKey("KareKodBildirimTürüId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.OtherEntities.KareKodDeaktivasyonTürü", "KareKodDeaktivasyonTürü")
                        .WithMany()
                        .HasForeignKey("KareKodDeaktivasyonTürüId");

                    b.HasOne("Entities.Concrete.OtherEntities.KareKodMüşteri", "KareKodMüşteri")
                        .WithMany()
                        .HasForeignKey("KareKodMüşteriId");

                    b.Navigation("KareKodAnaUrun");

                    b.Navigation("KareKodBildirimTürü");

                    b.Navigation("KareKodDeaktivasyonTürü");

                    b.Navigation("KareKodMüşteri");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodBildirimStokMTM", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.KareKodBildirimEmri", "KareKodBildirimEmri")
                        .WithMany()
                        .HasForeignKey("KareKodBildirimEmriId");

                    b.HasOne("Entities.Concrete.OtherEntities.KareKodStok", "KareKodStok")
                        .WithMany()
                        .HasForeignKey("KareKodStokId");

                    b.Navigation("KareKodBildirimEmri");

                    b.Navigation("KareKodStok");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodBildirimUrun", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.KareKodUrunler", "KareKodUrunler")
                        .WithMany()
                        .HasForeignKey("KareKodUrunlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KareKodUrunler");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodIsEmri", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.KareKodAnaUrun", "BaseProduct")
                        .WithMany()
                        .HasForeignKey("BaseProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.OtherEntities.KareKodIsEmriIstasyonMTM", "KareKodIsEmriIstasyonMTM")
                        .WithMany()
                        .HasForeignKey("KareKodIsEmriIstasyonMTMId1");

                    b.Navigation("BaseProduct");

                    b.Navigation("KareKodIsEmriIstasyonMTM");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodIstasyon", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.KareKodIsEmriIstasyonMTM", "KareKodIsEmriIstasyonMTM")
                        .WithMany()
                        .HasForeignKey("KareKodIsEmriIstasyonMTMId1");

                    b.Navigation("KareKodIsEmriIstasyonMTM");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodKoli", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.KareKodIsEmri", "KareKodIsEmri")
                        .WithMany()
                        .HasForeignKey("KareKodIsEmriId");

                    b.Navigation("KareKodIsEmri");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodMüşteriYetkilileri", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.KareKodMüşteri", "KareKodMüşteri")
                        .WithMany("KareKodMüşteriYetkilileris")
                        .HasForeignKey("KareKodMüşteriId");

                    b.Navigation("KareKodMüşteri");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodPalet", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.KareKodIsEmri", "KareKodIsEmri")
                        .WithMany()
                        .HasForeignKey("KareKodIsEmriId");

                    b.Navigation("KareKodIsEmri");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodUrunler", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.KareKodIsEmri", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("WorkOrderId");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.ProgramŞirketKullanıcı", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany("ProgramŞirketKullanıcıs")
                        .HasForeignKey("ProgramŞirketGrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ProgramŞirketGrup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Reçete", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.Navigation("ProgramŞirketGrup");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Reçete_Iş_MTM", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Iş", "Iş")
                        .WithMany("Reçete_Iş_MTMs")
                        .HasForeignKey("IşId");

                    b.HasOne("Entities.Concrete.OtherEntities.Depo", "KullanılacakDepo")
                        .WithMany()
                        .HasForeignKey("KullanılacakDepoId");

                    b.HasOne("Entities.Concrete.OtherEntities.Stok", "KullanılacakStok")
                        .WithMany()
                        .HasForeignKey("KullanılacakStokId");

                    b.HasOne("Entities.Concrete.OtherEntities.Reçete", "Reçete")
                        .WithMany("Reçete_Iş_MTMs")
                        .HasForeignKey("ReçeteId");

                    b.HasOne("Entities.Concrete.OtherEntities.Depo", "UretilecekDepo")
                        .WithMany()
                        .HasForeignKey("UretilecekDepoId");

                    b.HasOne("Entities.Concrete.OtherEntities.Stok", "UretilecekStok")
                        .WithMany()
                        .HasForeignKey("UretilecekStokId");

                    b.Navigation("Iş");

                    b.Navigation("KullanılacakDepo");

                    b.Navigation("KullanılacakStok");

                    b.Navigation("Reçete");

                    b.Navigation("UretilecekDepo");

                    b.Navigation("UretilecekStok");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Reçete_Tezgah_MTM", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Reçete", "Reçete")
                        .WithMany()
                        .HasForeignKey("ReçeteId");

                    b.HasOne("Entities.Concrete.OtherEntities.Tezgah", "Tezgah")
                        .WithMany("Reçete_Tezgah_MTMs")
                        .HasForeignKey("TezgahId");

                    b.Navigation("Reçete");

                    b.Navigation("Tezgah");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Stok", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Birim", "Birim")
                        .WithMany("Stoks")
                        .HasForeignKey("BirimId");

                    b.HasOne("Entities.Concrete.OtherEntities.Depo", "Depo")
                        .WithMany("Stoks")
                        .HasForeignKey("DepoId");

                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.Navigation("Birim");

                    b.Navigation("Depo");

                    b.Navigation("ProgramŞirketGrup");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.StokHareket", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Cari", "Cari")
                        .WithMany()
                        .HasForeignKey("CariId");

                    b.HasOne("Entities.Concrete.OtherEntities.Depo", "Depo")
                        .WithMany()
                        .HasForeignKey("DepoId");

                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.HasOne("Entities.Concrete.OtherEntities.Stok", "Stok")
                        .WithMany("StokHarekets")
                        .HasForeignKey("StokId");

                    b.Navigation("Cari");

                    b.Navigation("Depo");

                    b.Navigation("ProgramŞirketGrup");

                    b.Navigation("Stok");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.StokKoduTanım", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.Navigation("ProgramŞirketGrup");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Tezgah", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.Navigation("ProgramŞirketGrup");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Tezgah_Iş_MTM", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Iş", "Iş")
                        .WithMany()
                        .HasForeignKey("IşId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.OtherEntities.Tezgah", "Tezgah")
                        .WithMany("Tezgah_Iş_MTMs")
                        .HasForeignKey("TezgahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Iş");

                    b.Navigation("Tezgah");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Urun", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.ProgramŞirketGrup", "ProgramŞirketGrup")
                        .WithMany()
                        .HasForeignKey("ProgramŞirketGrupId");

                    b.HasOne("Entities.Concrete.OtherEntities.İşEmri", "İşEmri")
                        .WithMany("Uruns")
                        .HasForeignKey("İşEmriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramŞirketGrup");

                    b.Navigation("İşEmri");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.UrunAşamaları", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Iş", "Iş")
                        .WithMany()
                        .HasForeignKey("IşId");

                    b.HasOne("Entities.Concrete.OtherEntities.Urun", "Urun")
                        .WithMany("UrunAşamalarıs")
                        .HasForeignKey("UrunId");

                    b.HasOne("Entities.Concrete.OtherEntities.İşEmri", "İşEmri")
                        .WithMany()
                        .HasForeignKey("İşEmriId");

                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", "İşiÜstlenenKullanıcı")
                        .WithMany()
                        .HasForeignKey("İşiÜstlenenKullanıcıId");

                    b.Navigation("Iş");

                    b.Navigation("Urun");

                    b.Navigation("İşEmri");

                    b.Navigation("İşiÜstlenenKullanıcı");
                });

            modelBuilder.Entity("Entities.Concrete.Reçete_Stok_MTM", b =>
                {
                    b.HasOne("Entities.Concrete.OtherEntities.Reçete", "Reçete")
                        .WithMany("Reçete_Stok_MTMs")
                        .HasForeignKey("ReçeteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.OtherEntities.Stok", "Stok")
                        .WithMany()
                        .HasForeignKey("StokId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reçete");

                    b.Navigation("Stok");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Concrete.Identity.AppIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Announcement", b =>
                {
                    b.Navigation("AnnouncementRoles");

                    b.Navigation("AnnouncementUsers");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Birim", b =>
                {
                    b.Navigation("Stoks");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.BlokBilgi", b =>
                {
                    b.Navigation("BlokGörüntüs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Cari", b =>
                {
                    b.Navigation("CariHarekets");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Depo", b =>
                {
                    b.Navigation("Stoks");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.FaturaBaslık", b =>
                {
                    b.Navigation("FaturaDetays");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Iş", b =>
                {
                    b.Navigation("Reçete_Iş_MTMs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.İşEmri", b =>
                {
                    b.Navigation("Uruns");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.KareKodMüşteri", b =>
                {
                    b.Navigation("KareKodMüşteriYetkilileris");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.ProgramŞirketGrup", b =>
                {
                    b.Navigation("ProgramŞirketKullanıcıs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Reçete", b =>
                {
                    b.Navigation("Reçete_Iş_MTMs");

                    b.Navigation("Reçete_Stok_MTMs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Stok", b =>
                {
                    b.Navigation("BlokBilgis");

                    b.Navigation("FiyatListesi");

                    b.Navigation("StokHarekets");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Şantiye", b =>
                {
                    b.Navigation("BlokBilgis");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Tezgah", b =>
                {
                    b.Navigation("Reçete_Tezgah_MTMs");

                    b.Navigation("Tezgah_Iş_MTMs");
                });

            modelBuilder.Entity("Entities.Concrete.OtherEntities.Urun", b =>
                {
                    b.Navigation("UrunAşamalarıs");
                });
#pragma warning restore 612, 618
        }
    }
}
